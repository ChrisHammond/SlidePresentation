Slide Presentation Route Mapper

		using DotNetNuke.Web.Services;

		namespace Christoc.Com.Modules.SlidePresentation.services
		{
			public class SlidePresentationRouteMapper: IServiceRouteMapper
			{
				public void RegisterRoutes(IMapRoute mapRouteManager)
				{
					mapRouteManager.MapRoute("SlidePresentation", "{controller}.ashx/{action}",
											 new[] { "Christoc.Com.Modules.SlidePresentation.services" });
				}
			}
		}





Slide Presentation controller

	using System;
	using System.Web.Mvc;
	using DotNetNuke.Instrumentation;
	using DotNetNuke.Web.Services;

	namespace Christoc.Com.Modules.SlidePresentation.services
	{
		public class SlidePresentationController:DnnController  
		{
			[DnnAuthorize(AllowAnonymous = true)]
        public ActionResult GetSlides(int tabId, int moduleId)
        {
            try
            {
                var slides = Components.Slide.GetSlides(tabId, moduleId);
                return Json(slides, JsonRequestBehavior.AllowGet);
            }
            catch (Exception exc)
            {
                DnnLog.Error(exc);
                return Json(null, JsonRequestBehavior.AllowGet);
            }
        }
		}
	}


View.ascx

<div id="SlidePresentation">
    <!-- ko foreach: slides -->
    <div class="step" data-bind="attr:{'data-x':XVal,'data-y':YVal}">
        <div data-bind="html:Body">
        </div>
    </div>
    <!-- /ko -->
</div>


<script language="javascript" type="text/javascript">
    jQuery(document).ready(function ($) {
        var md = new SlidePresentation($, ko, {
            moduleId:<% = ModuleId %>,
            tabId: <% = TabId %>,
            serverErrorText: '<%=DotNetNuke.UI.Utilities.ClientAPI.GetSafeJSString(LocalizeString("ServerError"))%>',
            servicesFramework: $.ServicesFramework(<%=ModuleContext.ModuleId %>)   
        });
        md.init('#SlidePresentation');
    });
</script>


View.ASCX.cs

	ClientResourceManager.RegisterScript(Parent.Page, "/desktopmodules/SlidePresentation/Scripts/SlidePresentation.js");

SlidePresentation.JS

function SlidePresentation($, ko, settings) {
    var moduleId = settings.moduleId;
    var tabId = settings.tabId;
    var serviceFramework = settings.servicesFramework;
    var baseServicePath = serviceFramework.getServiceRoot('SlidePresentation') + 'SlidePresentation.ashx/';

    function Slide(s) {
        this.SlideId = s.SlideId;
        this.Body = s.Body;
        //this.XVal = s.SlideId * Math.random()*100;
        //this.YVal = s.SlideId * Math.random()*100;
    }

    var viewModel = {
        slides: ko.observableArray([])
    };


    //get slides on initialization
    this.init = function(element) {

        var sf = $.ServicesFramework(moduleId);
        var data = {};// serviceFramework.getAntiForgeryProperty(moduleId);
        sf.getAntiForgeryProperty();
        data.moduleId = moduleId;
        data.tabId = tabId;
        serviceFramework.getAntiForgeryProperty();
        $.ajax({
            type: "POST",
            cache: false,
            url: baseServicePath + 'GetSlides',
            data: data
        }).done(function(data) {
            viewModel.slides = ko.utils.arrayMap(data, function(slide) {
                return new Slide(slide);
            });
            ko.applyBindings(viewModel);

            $('#SlidePresentation').jmpress();
            
        }).fail(function () {
            Console.Log('Sorry failed to load Slides');
        });
    };
        
}